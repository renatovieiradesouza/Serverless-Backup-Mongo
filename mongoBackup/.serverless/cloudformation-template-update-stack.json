{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "BackupLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/mongobackup-production-backup"
      }
    },
    "ExportToS3LogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/mongobackup-production-exportToS3"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "mongobackup",
                  "production",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/mongobackup-production*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/mongobackup-production*:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "lambda:InvokeFunction",
                    "sqs:SendMessage",
                    "sqs:GetQueueUrl",
                    "sqs:ListQueues",
                    "sqs:ReceiveMessage",
                    "sqs:DeleteMessage"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "mongobackup",
              "production",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "BackupLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/mongobackup/production/1662954995413-2022-09-12T03:56:35.413Z/mongobackup.zip"
        },
        "Handler": "src/create-snapshot.generateBackup",
        "Runtime": "python3.8",
        "FunctionName": "mongobackup-production-backup",
        "MemorySize": 128,
        "Timeout": 800,
        "Environment": {
          "Variables": {
            "SQS_QUEUE_URL": "https://sqs.sa-east-1.amazonaws.com/168984433384/mongoBackupToS3Queue",
            "USERNAME": "tkqiaxhf",
            "PASSWORD": "d539c5e3-415f-4195-8012-6fc94d5a17b3"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "VpcConfig": {
          "SecurityGroupIds": [
            "sg-047559b8131f3b2cc"
          ],
          "SubnetIds": [
            "subnet-0ebd4ddfa425f0a3a",
            "subnet-0a78c2d6d0a979f4a"
          ]
        },
        "Layers": [
          "arn:aws:lambda:sa-east-1:168984433384:layer:requests:1",
          "arn:aws:lambda:sa-east-1:168984433384:layer:dotenv:1"
        ]
      },
      "DependsOn": [
        "BackupLogGroup"
      ]
    },
    "ExportToS3LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/mongobackup/production/1662954995413-2022-09-12T03:56:35.413Z/mongobackup.zip"
        },
        "Handler": "src/move-snapshot.generateExport",
        "Runtime": "python3.8",
        "FunctionName": "mongobackup-production-exportToS3",
        "MemorySize": 128,
        "Timeout": 800,
        "Environment": {
          "Variables": {
            "SQS_QUEUE_URL": "https://sqs.sa-east-1.amazonaws.com/168984433384/mongoBackupToS3Queue",
            "USERNAME": "tkqiaxhf",
            "PASSWORD": "d539c5e3-415f-4195-8012-6fc94d5a17b3"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "VpcConfig": {
          "SecurityGroupIds": [
            "sg-047559b8131f3b2cc"
          ],
          "SubnetIds": [
            "subnet-0ebd4ddfa425f0a3a",
            "subnet-0a78c2d6d0a979f4a"
          ]
        },
        "Layers": [
          "arn:aws:lambda:sa-east-1:168984433384:layer:requests:1",
          "arn:aws:lambda:sa-east-1:168984433384:layer:dotenv:1"
        ]
      },
      "DependsOn": [
        "ExportToS3LogGroup"
      ]
    },
    "BackupLambdaVersionqesUulgRtYGsoGHYTYEjmZ7YpDVNYaWxPygE1uZqjJI": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "BackupLambdaFunction"
        },
        "CodeSha256": "JoMtnzJ8hxr2haJ/zxQ3ZAySqbFejiQJSF3tAU2LeeE="
      }
    },
    "ExportToS3LambdaVersion9gBgfPyThoJPfeGqzIL9pk8oXNCeLG33mbBcSVR1tE": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "ExportToS3LambdaFunction"
        },
        "CodeSha256": "JoMtnzJ8hxr2haJ/zxQ3ZAySqbFejiQJSF3tAU2LeeE="
      }
    },
    "BackupEventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "cron(0 6,18 ? * SUN-SUN *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "BackupLambdaFunction",
                "Arn"
              ]
            },
            "Id": "backupSchedule"
          }
        ]
      }
    },
    "BackupLambdaPermissionEventsRuleSchedule1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "BackupLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "BackupEventsRuleSchedule1",
            "Arn"
          ]
        }
      }
    },
    "ExportToS3EventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "cron(0/15 * * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "ExportToS3LambdaFunction",
                "Arn"
              ]
            },
            "Id": "exportToS3Schedule"
          }
        ]
      }
    },
    "ExportToS3LambdaPermissionEventsRuleSchedule1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "ExportToS3LambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "ExportToS3EventsRuleSchedule1",
            "Arn"
          ]
        }
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-mongobackup-production-ServerlessDeploymentBucketName"
      }
    },
    "BackupLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "BackupLambdaVersionqesUulgRtYGsoGHYTYEjmZ7YpDVNYaWxPygE1uZqjJI"
      },
      "Export": {
        "Name": "sls-mongobackup-production-BackupLambdaFunctionQualifiedArn"
      }
    },
    "ExportToS3LambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "ExportToS3LambdaVersion9gBgfPyThoJPfeGqzIL9pk8oXNCeLG33mbBcSVR1tE"
      },
      "Export": {
        "Name": "sls-mongobackup-production-ExportToS3LambdaFunctionQualifiedArn"
      }
    }
  }
}